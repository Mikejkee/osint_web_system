1. Название main функций сервисов в CamlCase_servce.py
2. Название внутри "service_name": "Если в несколько слов, то обязательно каждое слово с большой буквы и через пробелы, если в нескольких словах нет нужды, то большая буква должна быть одна"
3. Запуск хрома функцией from utils.services.additional_functions.chrome_driver import start_chrome_driver
4. Запуск сессии телеги функцией from utils.services.telegram_sessions.telegram_client import client_start

----------------------------------------------------------------------------------?--------------------------------------------------------------------------------------------------
5. Описание сервиса перед main функцией вида:
	"""
		"service_name": "Whoisdom",																								!-> Имя сервиса исходя из 2 пункта
		"input_parameters": "[!URL_addresses-url,URL_addresses-ip)]",															!-> Если параметр обязательный, то перед ним ставим
																																	восклицательный знак, если нет - ничего 
																																	(все должны быть определенной записи из
																																	json-схемы)
		"Description": "Whoisdom Parser info INPUT(URL), OUTPUT(ip, домены, список DNS-серверов, дата создания, )", 			!-> Описание сервиса, чтобы было понятно 
	"""


6. return_dic каждой main функции сервиса должен выглядеть таким образом:
	return_dic = {
        'input_parameters':                        		!-> список словарей входных параметра типа:
        [
            {
                'info_type': "emails-user_name",		!-> info_type - тип входного параметра (все должны быть определенной записи из json-схемы)
                'data': car_number						!-> data - сами данные
            },
        ],
        'service_info': {								!-> информации о сервисе
            'service_name': "AvinfoBotCar",				!-> название (одинаковое везде должно быть и в описании и здесь)
            'timestamp_start_search': time(),			!-> время начала поиска
            'timestamp_stop_search': time(),			!-> время конца поиска
			
		},
        'output_data': output_data,						!-> словарь результата поиска
    }
	
	output_data - словарь, который содержит три типа информации (такого же плана return должен быть для написанного вашего кода функции работы с сервисом)
		- обычное ключ - значение {'fio': 'Ivanov Ivan Ivanovich'} 												!-> в дальнейшем - это обычная вершина в графе результата поиска,
																													следующая из начальной поисковой вершины
		- обычный список - {'address': ['Msk', 'Moscow', 'Moskva'] }												!-> несколько значений одного типа (все станут обычными вершинами как 1)
		- словарь - 'phone' : {																					!-> это значение, которое было прокинуто в этом же сервисе(ТОЛЬКО
								'892000000000': {																	ДЛЯ ЭТОГО СЛУЧАЯ) и по нему появилась какая-то доп инфа (ключ 
									'number_operator_info': 'ПАО "МегаФон" г. Москва и Московская область',			станет вершиной, а словарь значений уже следующими из нее 
									'address': ['Msk', 'Moscow', 'Moskva'],											другими вершинами, как перовые 2), глубина увеличится еще на 1. 
								}, 
								'892000000001': {},
								'892000000002': {},
							}
	Общий принцип формирования итогового словаря такой - если вы один раз вытаскиваете информацию из сервиса, и нет возможности или необходимости прокидывать в этот сервис второй раз, то на выходе output_data формируется по типу, ключ - значение, либо ключ - список значений.