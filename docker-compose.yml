version: "3"

volumes:
  mongoData:
    external:
      name: mongo_external
networks:
  mynetwork:
    driver: bridge
services:
  mongo:
    image: mongo:4.2.1
    restart: always
    volumes:
      - mongoData:/data/db
    networks:
      - mynetwork
    command: mongod
    #environment:
     # MONGO_INITDB_ROOT_USERNAME: admin
      #MONGO_INITDB_ROOT_PASSWORD: 119988
      #MONGO_INITDB_DATABASE: osint
    ports:
         - 27017:27017
  neo4j:
    build:
      context: ./
      dockerfile: ./DockerFiles/Neo4jDockerfile
    restart: always
    volumes:
      - ./osint/search_result/neo4j_data:/neo4j/neo4j-community-4.2.3/data
      - ./osint/utils/neo4j/conf:/neo4j/neo4j-community-4.2.3/conf
    networks:
      - mynetwork
    ports:
      - 7474:7474
      - 7687:7687
      - '2022:22'
    environment:
      - CHOKIDAR_USEPOLLING:true
      #- NEO4J_dbms_connector_https_advertised__address=localhost:7473
      #- NEO4J_dbms_connector_http_advertised__address=localhost:7474
      #- NEO4J_dbms_connector_bolt_advertised__address=localhost:7687
      #- NEO4J_AUTH=none
  redis:
    image: "redis:alpine"
    networks:
      - mynetwork
  app:
    build:
      context: ./
      dockerfile: ./DockerFiles/AppDockerfile
    restart: always
    networks:
      - mynetwork
    command: dockerize -wait tcp://mongo:27017 -wait tcp://redis:6379 -timeout 1m sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      # auto saves any update to docker
      - ./osint:/osint
    environment:
      - DB_HOST=mongo
      - DB_NAME=osint
      - DB_HOST=27017
      #- DB_USER=admin
      #- DB_PASSWORD=119988
    depends_on:
      - mongo
      - redis
      - neo4j
  celery:
    build:
      context: ./
      dockerfile: ./DockerFiles/AppDockerfile
    command: celery -A osint worker -l info
    networks:
      - mynetwork
    volumes:
      - ./osint:/osint
    depends_on:
      - redis
      - app
  #celery-beat:
  #  build: .
  #  command: celery -A osint beat -l info
  #  volumes:
  #    - ./osint:/osint
  #  depends_on:
  #    - mongo
  #    - redis